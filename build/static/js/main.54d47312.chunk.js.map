{"version":3,"sources":["store/index.js","store/initialState.js","store/constants.js","store/reducers/cycles.js","store/reducers/index.js","store/reducers/settings.js","store/reducers/message.js","store/reducers/definechronotype.js","store/reducers/notification.js","components/Nav.js","components/Icon.js","components/BottomMenu.js","components/Settings.js","store/actions/settings.js","store/actions/cycles.js","components/CyclesForm.js","store/actions/message.js","components/CycleCard.js","components/Cycles.js","store/actions/notification.js","components/CyclesPage.js","components/StateController.js","components/ChronotypeInfo.js","components/DefineChronotype.js","store/actions/definechronotype.js","components/Message.js","App.js","serviceWorker.js","index.js"],"names":["reducers","v1","v2","Context","React","createContext","Provider","initialState","reducer","children","useReducer","state","dispatch","value","wrapActions","actions","result","key","connect","mapStateToProps","Component","props","Consumer","getAdvice","i","config","timeToWakeUp","hours","minutes","wakeUpDate","Date","setHours","setMinutes","date","duration","singleCycleTime","timeToFallAsleep","parseInt","Math","round","calculateDuration","goToSleepDate","subtractDates","timeout","getTime","now","preparedTime","getHours","getMinutes","combineReducers","settings","action","type","constants","chronoCardAmount","payload","cycles","globalState","count","advices","push","undefined","message","text","show","chronotype","sum","showTest","notification","timeoutKey","nextState","prevStateForKey","nextStateForKey","load","version","window","localStorage","savedState","JSON","parse","getItem","console","log","join","pageTitleMap","Nav","className","useLocation","pathname","iconTypes","Map","Icon","size","get","style","fontSize","BottomMenu","active","to","setChronoCardAmount","setTimeToFallAsleep","setSingleCycleTime","Fragment","onSubmit","e","preventDefault","htmlFor","onChange","target","id","placeholder","calculateCycles","setTimeToWakeUp","time","onClick","alertMessage","setTimeout","CycleCard","cycle","onClickHandler","planNotification","clearTimeout","Push","create","body","vibrate","requireInteraction","map","index","CyclesPage","StateController","this","initNotifications","addEventListener","setItem","stringify","Permission","has","request","data","name","lark","pigeon","owl","timeToGetUp","highActivity","meals","DefineChronotype","q0","q1","q2","q3","q4","onInputChange","bind","setState","validated","defineChronotype","clearChronotype","checked","ChronotypeInfo","App","path","component","exact","Settings","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"6KAkC+BA,ECNRC,EAAIC,E,8DD1BrBC,EAAUC,IAAMC,gBAETC,EAAW,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,aAAcC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,SAAe,EACnCL,IAAMM,WAAWF,EAASD,GADS,mBACtDI,EADsD,KAC/CC,EAD+C,KAG7D,OACI,kBAACT,EAAQG,SAAT,CAAkBO,MAAO,CAACF,QAAOC,aAC5BH,IAKPK,EAAc,SAACC,EAASH,EAAUD,GACpC,IAAMK,EAAS,GAD+B,WAEpCC,GACND,EAAOC,GAAO,kBAAaF,EAAQE,GAAR,MAAAF,EAAO,UAAPA,CAAsBH,EAAUD,KAD/D,IAAI,IAAMM,KAAOF,EAAU,EAAjBE,GAGV,OAAOD,GAGEE,EAAU,eAACC,EAAD,wDAAwBJ,EAAxB,uDAAgC,GAAhC,OAAuC,SAAAK,GAAS,OAAI,SAAAC,GAAK,OAC5E,kBAAClB,EAAQmB,SAAT,MACK,gBAAGX,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACG,kBAACQ,EAAD,iBACQC,EACCF,GAAmBA,EAAgBR,GACpCG,EAAYC,EAASH,EAAUD,WE5BpC,EACO,mBADP,EAEW,uBAFX,EAGW,uBAHX,EAIU,sBAJV,EAKI,gBALJ,EAMG,eANH,EAOQ,oBAPR,EAQO,mBARP,EASS,qBATT,EAWW,uB,QCUpBY,EAAY,SAACC,EAAGC,GAAY,IAAD,EACFA,EAAOC,aAA1BC,EADqB,EACrBA,MAAOC,EADc,EACdA,QACTC,EAAa,IAAIC,KACvBD,EAAWE,SAASJ,GACpBE,EAAWG,WAAWJ,GAEtB,IAxBgBK,EAwBVC,EAnBgB,SAACV,EAAGC,GAAY,IAC9BU,EAAsCV,EAAtCU,gBAAiBC,EAAqBX,EAArBW,iBACrBR,GAAWJ,EAAE,IAAMa,SAASF,IAAoB,IAAME,SAASD,IAAqB,GACpFT,EAAQ,EAOZ,OALGC,EAAU,KACTD,GAASW,KAAKC,MAAMX,EAAU,IAC9BA,GAAoB,IAGhB,CAAED,QAAOC,WASAY,CAAkBhB,EAAGC,GAChCgB,EAAgBC,YAAcb,EAAYK,GAC5CS,EAAUF,EAAcG,UAAYd,KAAKe,MAO7C,OAJIF,EAAU,IACVA,EAAU,MAAQA,GAGf,CAAEG,cAjCOb,EAiCmBQ,EAhCnCR,EAAO,CAACA,EAAKc,WAAYd,EAAKe,cACxB,GAAN,OAAUf,EAAK,GAAK,GAAK,IAAIA,EAAK,GAAKA,EAAK,GAA5C,YAAkDA,EAAK,GAAK,GAAK,IAAIA,EAAK,GAAKA,EAAK,KA+BjCU,YC7BxCM,GJ2BgBjD,EI3BA,CAC3BkD,SCPW,SAACvC,EAAOwC,GACnB,OAAOA,EAAOC,MACV,KAAKC,EACD,OAAO,eAAI1C,EAAX,CAAkB2C,iBAAkBH,EAAOI,UAC/C,KAAKF,EACD,OAAO,eAAI1C,EAAX,CAAkByB,iBAAkBe,EAAOI,UAC/C,KAAKF,EACD,OAAO,eAAI1C,EAAX,CAAkBwB,gBAAiBgB,EAAOI,UAC9C,QACI,OAAO5C,IDDf6C,OD8BW,SAAC7C,EAAOwC,EAAQM,GAC3B,OAAON,EAAOC,MACV,KAAKC,EASD,IAPA,IAAMK,EAAQrB,SAASoB,EAAYP,SAASI,mBAAqB,EAC3D7B,EAAS,CACXU,gBAAiBsB,EAAYP,SAASf,gBACtCC,iBAAkBqB,EAAYP,SAASd,iBACvCV,aAAcf,EAAMe,cAElBiC,EAAU,GACPnC,EAAI,EAAGA,EAAIkC,EAAOlC,IACvBmC,EAAQC,KAAKrC,EAAUC,EAAGC,IAG9B,OAAO,eAAKd,EAAZ,CAAmBgD,YAEvB,KAAKN,EACD,OAAO,eACA1C,EADP,CAEIe,aAAc,CACVC,WAAgCkC,IAAzBV,EAAOI,QAAQ5B,MAAsBhB,EAAMe,aAAaC,MAAQwB,EAAOI,QAAQ5B,MACtFC,aAAoCiC,IAA3BV,EAAOI,QAAQ3B,QAAwBjB,EAAMe,aAAaE,QAAUuB,EAAOI,QAAQ3B,WAIxG,QACI,OAAOjB,ICxDfmD,QETW,SAACnD,EAAOwC,GACnB,OAAOA,EAAOC,MACV,KAAKC,EACD,OAAO,eAAK1C,EAAZ,CAAmBoD,KAAMZ,EAAOI,QAASS,MAAM,IACnD,KAAKX,EACG,OAAO,eAAK1C,EAAZ,CAAmBqD,MAAM,IACjC,QACI,OAAOrD,IFGfsD,WGVW,SAACtD,EAAOwC,GACnB,OAAOA,EAAOC,MACV,KAAKC,EACD,IAAIa,EAAM,EACNd,EAAM,GACV,IAAI,IAAInC,KAAOkC,EAAOI,QAClBW,GAAOf,EAAOI,QAAQtC,GAS1B,OANImC,EADDc,GAAO,GACD,OACCA,GAAO,GACN,SAEA,MAEJ,eAAIvD,EAAX,CAAkBwD,UAAU,EAAOf,SACvC,KAAKC,EACD,OAAO,eAAI1C,EAAX,CAAkBwD,UAAU,EAAMf,KAAM,OAC5C,QACI,OAAOzC,IHRfyD,aIVW,SAACzD,EAAOwC,GACnB,OAAQA,EAAOC,MACX,KAAKC,EACD,OAAO,eAAI1C,EAAX,CAAkB0D,WAAYlB,EAAOI,UACzC,QACI,OAAO5C,KR2BwB,SAACA,EAAOwC,GAC/C,IAAMmB,EAAY,GAClB,IAAI,IAAMrD,KAAOjB,EAAU,CACvB,IAAMuE,EAAkB5D,EAAMM,GACxBuD,EAAkBxE,EAASiB,GAAKsD,EAAiBpB,EAAQxC,GAC/D2D,EAAUrD,GAAOuD,EAErB,OAAO,eAAK7D,EAAZ,GAAsB2D,KCzCtB3D,EAAQ,CACRuC,SAAU,CACNI,iBAAkB,EAClBlB,iBAAkB,GAClBD,gBAAiB,IAErBqB,OAAQ,CACJ9B,aAAc,CACVC,MAAO,EACPC,QAAS,GAEb+B,QAAS,IAEbM,WAAY,CACRb,KAAM,KACNe,UAAU,GAEdL,QAAS,CACLC,KAAM,GACNC,MAAM,GAEVI,aAAc,CACVC,WAAY,GAEhBI,MAAM,EACNC,QAAS,CAAC,EAAE,EAAE,IASlB,GAAIC,QAAUA,OAAOC,cAAgBjE,EAAM8D,KAAM,CAC7C,IAAMI,EAAaC,KAAKC,MAAMJ,OAAOC,aAAaI,QAAQ,cACtC,OAAfH,QAAiDhB,IAAvBgB,EAAWH,UARvBzE,EAQ+D4E,EAAWH,QARtExE,EAQ+ES,EAAM+D,SAP5GzE,EAAa,IAARA,EAAG,GAAmB,GAARA,EAAG,GAAUA,EAAG,MACnCC,EAAa,IAARA,EAAG,GAAmB,GAARA,EAAG,GAAUA,EAAG,MAO/BS,EAAQkE,EACRI,QAAQC,IAAI,2CAEZD,QAAQC,IAAR,sEAA2EL,EAAWH,QAAQS,KAAK,KAAnG,WAGJF,QAAQC,IAAI,qFAGDvE,Q,OQ3CTyE,EAAe,CACnB,IAAK,iCACL,YAAa,yDACb,oBAAqB,6HASRC,EANH,kBACV,yBAAKC,UAAU,cACb,0BAAMA,UAAU,qBAAsBF,EAAaG,cAAcC,a,OCT/DC,EAAY,IAAIC,IAAI,CACtB,CAAC,aAAc,cACf,CAAC,SAAU,yBACX,CAAC,WAAY,eAOFC,EAJF,SAAC,GAAD,IAAGvC,EAAH,EAAGA,KAAMkC,EAAT,EAASA,UAAT,IAAoBM,YAApB,MAAyB,GAAzB,SACT,0BAAMN,UAAS,gBAAWG,EAAUI,IAAIzC,GAAzB,YAAkCkC,GAAaQ,MAAO,CAACC,SAAUH,MCuBrEI,EA5BI,WACf,IAAMC,EAASV,cAAcC,SAC7B,OACI,4BAAQF,UAAU,eACd,kBAAC,IAAD,CAAMY,GAAG,aACL,yBAAKZ,UAAS,0BAAgC,cAAXW,GAA0B,2BACzD,kBAAC,EAAD,CAAM7C,KAAK,aACX,yBAAKkC,UAAU,yBAAf,4DAIR,kBAAC,IAAD,CAAMY,GAAG,KACL,yBAAKZ,UAAS,0BAAgC,MAAXW,GAAkB,2BACjD,kBAAC,EAAD,CAAM7C,KAAK,WACX,yBAAKkC,UAAU,yBAAf,oCAIR,kBAAC,IAAD,CAAMY,GAAG,qBACL,yBAAKZ,UAAS,0BAAgC,sBAAXW,GAAkC,2BACjE,kBAAC,EAAD,CAAM7C,KAAK,eACX,yBAAKkC,UAAU,yBAAf,wDCILpE,KAPS,SAAAP,GAAK,MAAK,CAC9B2C,iBAAkB3C,EAAMuC,SAASI,iBACjClB,iBAAkBzB,EAAMuC,SAASd,iBACjCD,gBAAiBxB,EAAMuC,SAASf,gBAChCuC,QAAS/D,EAAM+D,WAGqB,CAAEyB,oBC5BP,SAAA7C,GAAgB,OAAI,SAAA1C,GAAQ,OAAIA,EAAS,CAACwC,KAAMC,EAAgCE,QAASD,MD4B7D8C,oBC3B5B,SAAAhE,GAAgB,OAAI,SAAAxB,GAAQ,OAAIA,EAAS,CAACwC,KAAMC,EAAgCE,QAASnB,MD2BxCiE,mBC1BlD,SAAAlE,GAAe,OAAI,SAAAvB,GAAQ,OAAIA,EAAS,CAACwC,KAAMC,EAA+BE,QAASpB,OD0B1GjB,EAzBE,SAAC,GAAD,IAAGoC,EAAH,EAAGA,iBAAkBlB,EAArB,EAAqBA,iBAAkBD,EAAvC,EAAuCA,gBAAiBgE,EAAxD,EAAwDA,oBAAqBC,EAA7E,EAA6EA,oBAAqBC,EAAlG,EAAkGA,mBAAoB3B,EAAtH,EAAsHA,QAAtH,OACb,kBAAC,IAAM4B,SAAP,KACI,0BAAMC,SAAU,SAAAC,GAAC,OAAIA,EAAEC,iBACnB,2BAAOC,QAAQ,oBAAf,8HACA,2BAAOtD,KAAK,SAASvC,MAAOyC,EAAkBqD,SAAU,SAAAH,GAAC,OAAIL,EAAoBK,EAAEI,OAAO/F,QAAQgG,GAAG,mBAAmBC,YAAY,MAEpI,2BAAOJ,QAAQ,oBAAf,8KACA,2BAAOtD,KAAK,SAASvC,MAAOuB,EAAkBuE,SAAU,SAAAH,GAAC,OAAIJ,EAAoBI,EAAEI,OAAO/F,QAAQgG,GAAG,mBAAmBC,YAAY,MAEpI,2BAAOJ,QAAQ,mBAAf,wFACA,2BAAOtD,KAAK,SAASvC,MAAOsB,EAAiBwE,SAAU,SAAAH,GAAC,OAAIH,EAAmBG,EAAEI,OAAO/F,QAAQgG,GAAG,kBAAkBC,YAAY,OAErI,sEACapC,EAAQ,GADrB,IAC0BA,EAAQ,GADlC,IACuCA,EAAQ,QEhB1CqC,EAAkB,kBAAM,SAAAnG,GAAQ,OAAIA,EAAS,CAAEwC,KAAMC,EAA4BE,QAAS,SCoBxFrC,KAAQ,SAAAP,GAAK,MAAK,CAAEe,aAAcf,EAAM6C,OAAO9B,gBAAiB,CAAEsF,gBDnBlD,SAAAC,GAAI,OAAI,SAAArG,GAAQ,OAAIA,EAAS,CAAEwC,KAAMC,EAA8BE,QAAS0D,MCmBTF,mBAAnF7F,EAjBI,SAAC,GAAD,IAAGQ,EAAH,EAAGA,aAAcsF,EAAjB,EAAiBA,gBAAiBD,EAAlC,EAAkCA,gBAAlC,OACf,yBAAKzB,UAAU,QACX,wBAAIA,UAAU,iBAAd,sGACA,0BAAMA,UAAU,eACZ,+BACI,2BAAOlC,KAAK,OAAOkC,UAAU,4BAA4BzE,MAAOa,EAAaC,MAAOgF,SAAU,SAAAH,GAAC,OAAIQ,EAAgB,CAACrF,MAAO6E,EAAEI,OAAO/F,WADxI,kCAIA,+BACI,2BAAOuC,KAAK,OAAOkC,UAAU,4BAA4BzE,MAAOa,EAAaE,QAAS+E,SAAU,SAAAH,GAAC,OAAIQ,EAAgB,CAACpF,QAAS4E,EAAEI,OAAO/F,WAD5I,mCAKJ,4BAAQqG,QAASH,GAAjB,oEChBKI,EAAe,SAACpD,GAAD,IAAOpB,EAAP,uDAAe,IAAf,OAAwB,SAAA/B,GAChDwG,WAAWxG,EAAU+B,EAAS,CAAES,KAAMC,IACtCzC,EAAS,CAAEwC,KAAMC,EAAyBE,QAASQ,M,iBCOxCsD,EAPG,SAAC,GAAD,IAAG3D,EAAH,EAAGA,MAAO4D,EAAV,EAAUA,MAAOC,EAAjB,EAAiBA,eAAjB,OACd,yBAAKjC,UAAU,qBAAqB4B,QAASK,GACzC,0BAAMjC,UAAU,kBAAhB,sGAAqD5B,GACrD,wBAAI4B,UAAU,cAAcgC,EAAMxE,gBCc3B5B,KAAQ,SAAAP,GAAK,MAAK,CAAEgD,QAAShD,EAAM6C,OAAOG,WAAY,CAAEwD,eAAcK,iBCjBrD,SAACP,GAAD,OAAU,SAACrG,EAAUD,GACjD8G,aAAa9G,EAAMyD,aAAaC,YAChC,IAAMA,EAAa+C,YAAW,kBAAMM,IAAKC,OAAO,+HAA4B,CACxEC,KAAM,kBACNC,SAAS,EACTC,oBAAoB,MACpBb,GAEJrG,EAAS,CAAEwC,KAAMC,EAAgCE,QAASc,ODS/CnD,EAdA,SAAC,GAAiD,IAA/CyC,EAA8C,EAA9CA,QAASwD,EAAqC,EAArCA,aAAcK,EAAuB,EAAvBA,iBACrC,OACI,oCACK7D,EAAQoE,KAAI,SAACT,EAAOU,GAAR,OACT,kBAAC,EAAD,CAAWtE,MAAOsE,EAAQ,EAAGV,MAAOA,EAAOrG,IAAK+G,EAAOT,eAAgB,WACnEC,EAAiBF,EAAM3E,SACvBwE,EAAa,yIACblC,QAAQC,IAAIoC,EAAM3E,QAAU,eEFjCsF,EAPI,kBACf,oCACI,kBAAC,EAAD,MACA,kBAAC,EAAD,Q,wCCDFC,E,4LACmB,IAAD,OAChBC,KAAK9G,MAAM0F,kBACXoB,KAAKC,oBACLzD,OAAO0D,iBAAiB,UAAU,kBAC9B1D,OAAOC,aAAa0D,QAAQ,YAAaxD,KAAKyD,UAAU,EAAKlH,MAAMV,a,0CAItD,IACTwG,EAAiBgB,KAAK9G,MAAtB8F,aACHO,IAAKc,WAAWC,OACjBf,IAAKc,WAAWE,SACZ,kBAAMvB,EAAa,gHAAuB,QAC1C,kBAAMA,EAAa,4HAAyB,U,+BAMpD,OAAO,S,GApBe/F,aAwBfF,MAAQ,SAAAP,GAAK,MAAK,CAACA,WAAS,CAAEoG,kBAAiBI,gBAA/CjG,CAA+DgH,G,kBC5BxES,GAAO,CACTC,KAAM,CACFC,KAAM,yDACNC,OAAQ,uCACRC,IAAK,4BAETC,YAAa,CACTH,KAAM,YACNC,OAAQ,YACRC,IAAK,0DAET3G,iBAAkB,CACdyG,KAAM,cACNC,OAAQ,cACRC,IAAK,kDAETE,aAAc,CACVJ,KAAM,qCACNC,OAAQ,iCACRC,IAAK,qCAETG,MAAO,CACHL,KAAM,CACF,aAEJC,OAAQ,CACJ,cAEJC,IAAK,CACD,gBAKG,mBAAG3F,EAAH,EAAGA,KAAH,OACX,yBAAKkC,UAAU,SACX,yBAAKA,UAAU,gBAAf,qDACeqD,GAAKC,KAAKxF,IAEzB,yBAAKkC,UAAU,eAAf,sLACsC,0BAAMA,UAAU,gBAAgBqD,GAAKK,YAAY5F,KAEvF,yBAAKkC,UAAU,eAAf,0KACoC,0BAAMA,UAAU,gBAAgBqD,GAAKvG,iBAAiBgB,KAE1F,yBAAKkC,UAAU,eAAf,6JACiC,0BAAMA,UAAU,gBAAgBqD,GAAKM,aAAa7F,KAEnF,yBAAKkC,UAAU,eAAf,oKACmC,0BAAMA,UAAU,gBAAgBqD,GAAKO,MAAM9F,GAAM,OC7CtF+F,G,YACF,WAAY9H,GAAQ,IAAD,8BACf,4CAAMA,KACDV,MAAQ,CACTyI,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,GAER,EAAKC,cAAgB,EAAKA,cAAcC,KAAnB,iBACrB,EAAKnD,SAAW,EAAKA,SAASmD,KAAd,iBAVD,E,8EAaQ,IAAX9C,EAAU,EAAVA,OACZuB,KAAKwB,SAAL,gBAAgB/C,EAAOgC,KAAOvG,SAASuE,EAAO/F,W,+BAGzC2F,GACLA,EAAEC,iBACF,IAAImD,GAAY,EAChB,IAAI,IAAI3I,KAAOkH,KAAKxH,MACI,IAApBwH,KAAKxH,MAAMM,KAAe2I,GAAY,GAEvCA,EACCzB,KAAK9G,MAAMwI,iBAAiB1B,KAAKxH,OAEjCwH,KAAK9G,MAAM8F,aAAa,sH,+BAItB,IACExG,EAAmCwH,KAAnCxH,MAAO8I,EAA4BtB,KAA5BsB,cAAelD,EAAa4B,KAAb5B,SADzB,EAE6B4B,KAAK9G,MAA/ByI,EAFH,EAEGA,gBAAiB1G,EAFpB,EAEoBA,KACzB,OAAQ+E,KAAK9G,MAAM8C,SACf,8BACI,6MACA,yBAAKmB,UAAU,cACX,uBAAGA,UAAU,SAAQ,2BAAOlC,KAAK,QAAQwF,KAAK,KAAK/H,MAAM,IAAIkJ,QAAuB,IAAbpJ,EAAMyI,GAAWzC,SAAU8C,IAAlG,uFACA,uBAAGnE,UAAU,SAAQ,2BAAOlC,KAAK,QAAQwF,KAAK,KAAK/H,MAAM,IAAIkJ,QAAuB,IAAbpJ,EAAMyI,GAAWzC,SAAU8C,IAAlG,0CACA,uBAAGnE,UAAU,SAAQ,2BAAOlC,KAAK,QAAQwF,KAAK,KAAK/H,MAAM,IAAIkJ,QAAuB,IAAbpJ,EAAMyI,GAAWzC,SAAU8C,IAAlG,oCACA,uBAAGnE,UAAU,SAAQ,2BAAOlC,KAAK,QAAQwF,KAAK,KAAK/H,MAAM,IAAIkJ,QAAuB,IAAbpJ,EAAMyI,GAAWzC,SAAU8C,IAAlG,0EAEJ,gZACA,yBAAKnE,UAAU,cACX,uBAAGA,UAAU,SAAQ,2BAAOlC,KAAK,QAAQwF,KAAK,KAAK/H,MAAM,IAAIkJ,QAAuB,IAAbpJ,EAAM0I,GAAW1C,SAAU8C,IAAlG,wFACA,uBAAGnE,UAAU,SAAQ,2BAAOlC,KAAK,QAAQwF,KAAK,KAAK/H,MAAM,IAAIkJ,QAAuB,IAAbpJ,EAAM0I,GAAW1C,SAAU8C,IAAlG,sEACA,uBAAGnE,UAAU,SAAQ,2BAAOlC,KAAK,QAAQwF,KAAK,KAAK/H,MAAM,IAAIkJ,QAAuB,IAAbpJ,EAAM0I,GAAW1C,SAAU8C,IAAlG,sEACA,uBAAGnE,UAAU,SAAQ,2BAAOlC,KAAK,QAAQwF,KAAK,KAAK/H,MAAM,IAAIkJ,QAAuB,IAAbpJ,EAAM0I,GAAW1C,SAAU8C,IAAlG,qDAEJ,iPACA,yBAAKnE,UAAU,cACX,uBAAGA,UAAU,SAAQ,2BAAOlC,KAAK,QAAQwF,KAAK,KAAK/H,MAAM,IAAIkJ,QAAuB,IAAbpJ,EAAM2I,GAAW3C,SAAU8C,IAAlG,8JACA,uBAAGnE,UAAU,SAAQ,2BAAOlC,KAAK,QAAQwF,KAAK,KAAK/H,MAAM,IAAIkJ,QAAuB,IAAbpJ,EAAM2I,GAAW3C,SAAU8C,IAAlG,2FACA,uBAAGnE,UAAU,SAAQ,2BAAOlC,KAAK,QAAQwF,KAAK,KAAK/H,MAAM,IAAIkJ,QAAuB,IAAbpJ,EAAM2I,GAAW3C,SAAU8C,IAAlG,qFACA,uBAAGnE,UAAU,SAAQ,2BAAOlC,KAAK,QAAQwF,KAAK,KAAK/H,MAAM,IAAIkJ,QAAuB,IAAbpJ,EAAM2I,GAAW3C,SAAU8C,IAAlG,8DAEJ,qLACA,yBAAKnE,UAAU,cACX,uBAAGA,UAAU,SAAQ,2BAAOlC,KAAK,QAAQwF,KAAK,KAAK/H,MAAM,IAAIkJ,QAAuB,IAAbpJ,EAAM4I,GAAW5C,SAAU8C,IAAlG,gFACA,uBAAGnE,UAAU,SAAQ,2BAAOlC,KAAK,QAAQwF,KAAK,KAAK/H,MAAM,IAAIkJ,QAAuB,IAAbpJ,EAAM4I,GAAW5C,SAAU8C,IAAlG,8FAEJ,uBAAGnE,UAAU,qBAAb,+dACA,yBAAKA,UAAU,cACX,uBAAGA,UAAU,SAAQ,2BAAOlC,KAAK,QAAQwF,KAAK,KAAK/H,MAAM,IAAIkJ,QAAuB,IAAbpJ,EAAM6I,GAAW7C,SAAU8C,IAAlG,mEACA,uBAAGnE,UAAU,SAAQ,2BAAOlC,KAAK,QAAQwF,KAAK,KAAK/H,MAAM,IAAIkJ,QAAuB,IAAbpJ,EAAM6I,GAAW7C,SAAU8C,IAAlG,oCACA,uBAAGnE,UAAU,SAAQ,2BAAOlC,KAAK,QAAQwF,KAAK,KAAK/H,MAAM,IAAIkJ,QAAuB,IAAbpJ,EAAM6I,GAAW7C,SAAU8C,IAAlG,0CACA,uBAAGnE,UAAU,SAAQ,2BAAOlC,KAAK,QAAQwF,KAAK,KAAK/H,MAAM,IAAIkJ,QAAuB,IAAbpJ,EAAM6I,GAAW7C,SAAU8C,IAAlG,gFAEJ,4BAAQvC,QAASX,GAAjB,2DAGR,kBAAC,IAAMD,SAAP,KACI,kBAAC0D,GAAD,CAAgB5G,KAAMA,IACtB,4BAAQ8D,QAAS4C,EAAiBxE,UAAU,oBAA5C,2G,GA1EmBlF,IAAMgB,WAiFtBF,MAAQ,SAAAP,GAAK,OAAIA,EAAMsD,aAAY,CAAEkD,eAAc0C,iBCtFlC,SAAAtG,GAAO,OAAI,SAAA3C,GAAQ,OAAIA,EAAS,CAACwC,KAAMC,EAA6BE,cDsFhBuG,gBCrFrD,kBAAM,SAAAlJ,GAAQ,OAAIA,EAAS,CAAEwC,KAAMC,ODqFnDnC,CAAwFiI,IEhFxFjI,MAAQ,SAAAP,GAAK,OAAIA,EAAMmD,UAAvB5C,EAJC,SAAC,GAAD,IAAE6C,EAAF,EAAEA,KAAMC,EAAR,EAAQA,KAAR,OACZ,yBAAKsB,UAAS,kBAAatB,EAAO,gBAAkB,mBAAsBD,MC2B/DkG,GAhBH,kBACV,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAU1J,aAAcA,EAAcC,QAASR,GAC7C,kBAAC,EAAD,MACA,8BACE,kBAAC,IAAD,CAAOkK,KAAK,IAAIC,UAAWlC,EAAYmC,OAAK,IAC5C,kBAAC,IAAD,CAAOF,KAAK,YAAYC,UAAWE,EAAUD,OAAK,IAClD,kBAAC,IAAD,CAAOF,KAAK,oBAAoBC,UAAWhB,GAAkBiB,OAAK,IAClE,kBAAC,GAAD,OAEF,kBAAC,EAAD,MACA,kBAAC,GAAD,SCdAE,GAAcC,QACW,cAA7B5F,OAAO6F,SAASC,UAEe,UAA7B9F,OAAO6F,SAASC,UAEhB9F,OAAO6F,SAASC,SAASC,MACvB,2DAsCN,SAASC,GAAgBC,EAAOnJ,GAC9BoJ,UAAUC,cACPC,SAASH,GACTI,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBxK,QACfkK,UAAUC,cAAcQ,YAI1BrG,QAAQC,IACN,iHAKEzD,GAAUA,EAAO8J,UACnB9J,EAAO8J,SAASN,KAMlBhG,QAAQC,IAAI,sCAGRzD,GAAUA,EAAO+J,WACnB/J,EAAO+J,UAAUP,WAO5BQ,OAAM,SAAAC,GACLzG,QAAQyG,MAAM,4CAA6CA,MCzFjEC,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SDe1C,SAAkBrK,GACvB,GAA6C,kBAAmBoJ,UAAW,CAGzE,GADkB,IAAIkB,IAAIC,GAAwBrH,OAAO6F,SAASyB,MACpDC,SAAWvH,OAAO6F,SAAS0B,OAIvC,OAGFvH,OAAO0D,iBAAiB,QAAQ,WAC9B,IAAMuC,EAAK,UAAMoB,GAAN,sBAEP1B,KAgEV,SAAiCM,EAAOnJ,GAEtC0K,MAAMvB,EAAO,CACXwB,QAAS,CAAE,iBAAkB,YAE5BpB,MAAK,SAAAqB,GAEJ,IAAMC,EAAcD,EAASD,QAAQvG,IAAI,gBAEnB,MAApBwG,EAASE,QACO,MAAfD,IAA8D,IAAvCA,EAAYE,QAAQ,cAG5C3B,UAAUC,cAAc2B,MAAMzB,MAAK,SAAAC,GACjCA,EAAayB,aAAa1B,MAAK,WAC7BrG,OAAO6F,SAASmC,eAKpBhC,GAAgBC,EAAOnJ,MAG1BgK,OAAM,WACLxG,QAAQC,IACN,oEAvFA0H,CAAwBhC,EAAOnJ,GAI/BoJ,UAAUC,cAAc2B,MAAMzB,MAAK,WACjC/F,QAAQC,IACN,iHAMJyF,GAAgBC,EAAOnJ,OCzC/BqJ,K","file":"static/js/main.54d47312.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Context = React.createContext();\r\n\r\nexport const Provider = ({ initialState, reducer, children }) => {\r\n    const [state, dispatch] = React.useReducer(reducer, initialState);\r\n\r\n    return (\r\n        <Context.Provider value={{state, dispatch}}>\r\n            {children}\r\n        </Context.Provider>\r\n    )\r\n};\r\n\r\nconst wrapActions = (actions, dispatch, state) => {\r\n    const result = {};\r\n    for(const key in actions) {\r\n        result[key] = (...args) => actions[key](...args)(dispatch, state);\r\n    }\r\n    return result;\r\n}\r\n\r\nexport const connect = (mapStateToProps=false, actions={}) => Component => props => (\r\n    <Context.Consumer>\r\n        {({ state, dispatch }) => (\r\n            <Component\r\n                {...props}\r\n                {...(mapStateToProps && mapStateToProps(state))}\r\n                {...wrapActions(actions, dispatch, state)}\r\n            />\r\n        )}\r\n    </Context.Consumer>\r\n);\r\n\r\nexport const combineReducers = reducers => (state, action) => {\r\n    const nextState = {};\r\n    for(const key in reducers) {\r\n        const prevStateForKey = state[key];\r\n        const nextStateForKey = reducers[key](prevStateForKey, action, state);\r\n        nextState[key] = nextStateForKey;\r\n    }\r\n    return ({...state, ...nextState});\r\n}","let state = {\r\n    settings: {\r\n        chronoCardAmount: 6,\r\n        timeToFallAsleep: 30,\r\n        singleCycleTime: 90,\r\n    },\r\n    cycles: {\r\n        timeToWakeUp: {\r\n            hours: 0,\r\n            minutes: 0,\r\n        },\r\n        advices: [],\r\n    },\r\n    chronotype: {\r\n        type: null,\r\n        showTest: true,\r\n    },\r\n    message: {\r\n        text: \"\",\r\n        show: false\r\n    },\r\n    notification: {\r\n        timeoutKey: 0,\r\n    },\r\n    load: true,\r\n    version: [1,0,1]\r\n}\r\n\r\nconst checkVersions = (v1, v2) => {\r\n    v1 = v1[0] * 100 + v1[1] * 10 + v1[2];\r\n    v2 = v2[0] * 100 + v2[1] * 10 + v2[2];\r\n    return v1 >= v2;\r\n}\r\n\r\nif (window && window.localStorage && state.load) {\r\n    const savedState = JSON.parse(window.localStorage.getItem('app-state'));\r\n    if ((savedState !== null) && ((savedState.version !== undefined) && checkVersions(savedState.version, state.version))) {\r\n        state = savedState;\r\n        console.log(\"[debug]: Load state from localStorage.\")\r\n    } else {\r\n        console.log(`[debug]: Rewrite state to localStorage. Old app version was ${savedState.version.join('.')}.`)\r\n    }\r\n} else {\r\n    console.log(\"[debug]: Didn't load state from localStorage because state.load flag is disabled.\")\r\n}\r\n\r\nexport default state;","export default {\r\n    CALCULATE_CYCLES: \"CALCULATE_CYCLES\",\r\n    SET_CHRONOCARDAMOUNT: \"SET_CHRONOCARDAMOUNT\",\r\n    SET_TIMETOFALLASLEEP: \"SET_TIMETOFALLASLEEP\",\r\n    SET_SINGLECYCLETIME: \"SET_SINGLECYCLETIME\",\r\n    ALERT_MESSAGE: \"ALERT_MESSAGE\",\r\n    HIDE_MESSAGE: \"HIDE_MESSAGE\",\r\n    DEFINE_CHRONOTYPE: \"DEFINE_CHRONOTYPE\",\r\n    CLEAR_CHRONOTYPE: \"CLEAR_CHRONOTYPE\",\r\n    SET_TIME_TO_GET_UP: \"SET_TIME_TO_GET_UP\",\r\n    SET_NOTIFICATION_PERMISSION: \"SET_NOTIFICATION_PERMISSION\",\r\n    SET_NOTIFICATION_KEY: \"SET_NOTIFICATION_KEY\"\r\n}","import constants from \"../constants\";\r\nimport { sub as subtractDates } from \"date-fns\"\r\n\r\nconst prepareTime = date => {\r\n    date = [date.getHours(), date.getMinutes()];\r\n    return `${date[0] < 10 ? \"0\"+date[0] : date[0]}:${date[1] < 10 ? \"0\"+date[1] : date[1]}`;\r\n}\r\n\r\nconst calculateDuration = (i, config) => {\r\n    const { singleCycleTime, timeToFallAsleep } = config;\r\n    let minutes = (i+1) * (parseInt(singleCycleTime) || 0) + (parseInt(timeToFallAsleep) || 0);\r\n    let hours = 0;\r\n\r\n    if(minutes > 59) {\r\n        hours += Math.round(minutes / 60);\r\n        minutes = minutes % 60;\r\n    }\r\n\r\n    return  { hours, minutes }\r\n}\r\n\r\nconst getAdvice = (i, config) => {\r\n    const { hours, minutes } = config.timeToWakeUp;\r\n    const wakeUpDate = new Date();\r\n    wakeUpDate.setHours(hours);\r\n    wakeUpDate.setMinutes(minutes);\r\n\r\n    const duration = calculateDuration(i, config);\r\n    const goToSleepDate = subtractDates(wakeUpDate, duration)\r\n    let timeout = goToSleepDate.getTime() - Date.now();\r\n\r\n    // Set notification to the next day\r\n    if (timeout < 0) {\r\n        timeout = 86400 + timeout;\r\n    }\r\n\r\n    return { preparedTime: prepareTime(goToSleepDate), timeout };\r\n}\r\n\r\nexport default (state, action, globalState) => {\r\n    switch(action.type) {\r\n        case constants.CALCULATE_CYCLES:\r\n\r\n            const count = parseInt(globalState.settings.chronoCardAmount) || 0;\r\n            const config = {\r\n                singleCycleTime: globalState.settings.singleCycleTime,\r\n                timeToFallAsleep: globalState.settings.timeToFallAsleep,\r\n                timeToWakeUp: state.timeToWakeUp\r\n            }\r\n            const advices = [];\r\n            for (let i = 0; i < count; i++) {\r\n                advices.push(getAdvice(i, config));\r\n            }\r\n\r\n            return { ...state, advices }\r\n\r\n        case constants.SET_TIME_TO_GET_UP:\r\n            return {\r\n                ...state,\r\n                timeToWakeUp: {\r\n                    hours: action.payload.hours === undefined ? state.timeToWakeUp.hours : action.payload.hours,\r\n                    minutes: action.payload.minutes === undefined ? state.timeToWakeUp.minutes : action.payload.minutes\r\n                }\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from \"../\";\r\nimport settings from \"./settings\";\r\nimport cycles from \"./cycles\";\r\nimport message from \"./message\";\r\nimport chronotype from \"./definechronotype\";\r\nimport notification from \"./notification\";\r\n\r\nexport default combineReducers({\r\n    settings,\r\n    cycles,\r\n    message,\r\n    chronotype,\r\n    notification\r\n});","import constants from \"../constants\";\r\nexport default (state, action) => {\r\n    switch(action.type) {\r\n        case constants.SET_CHRONOCARDAMOUNT:\r\n            return {...state, chronoCardAmount: action.payload}\r\n        case constants.SET_TIMETOFALLASLEEP:\r\n            return {...state, timeToFallAsleep: action.payload}\r\n        case constants.SET_SINGLECYCLETIME:\r\n            return {...state, singleCycleTime: action.payload}\r\n        default: \r\n            return state\r\n    }\r\n}","import constants from \"../constants\";\r\nexport default (state, action) => {\r\n    switch(action.type) {\r\n        case constants.ALERT_MESSAGE:\r\n            return { ...state, text: action.payload, show: true};\r\n        case constants.HIDE_MESSAGE:\r\n                return { ...state, show: false};\r\n        default:\r\n            return state;\r\n    }\r\n}","import constants from \"../constants\";\r\nexport default (state, action) => {\r\n    switch(action.type) {\r\n        case constants.DEFINE_CHRONOTYPE:\r\n            let sum = 0;\r\n            let type= \"\";\r\n            for(let key in action.payload) {\r\n                sum += action.payload[key];\r\n            }\r\n            if(sum <= 10) {\r\n                type=\"lark\"\r\n            } else if(sum <= 15) {\r\n                type = \"pigeon\"\r\n            } else {\r\n                type = \"owl\"\r\n            }\r\n            return {...state, showTest: false, type};\r\n        case constants.CLEAR_CHRONOTYPE:\r\n            return {...state, showTest: true, type: null}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import constants from \"../constants\"\r\n\r\nexport default (state, action) => {\r\n    switch (action.type) {\r\n        case constants.SET_NOTIFICATION_KEY:\r\n            return {...state, timeoutKey: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}","import React from \"react\"\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst pageTitleMap = {\r\n  \"/\": \"циклы\",\r\n  \"/settings\": \"настройки\",\r\n  \"/definechronotype\": \"определение хронотипа\"\r\n}\r\n\r\nconst Nav = () => (\r\n  <div className=\"navigation\">\r\n    <span className=\"navigation__title\">{ pageTitleMap[useLocation().pathname] }</span>\r\n  </div>\r\n);\r\n\r\nexport default Nav;\r\n","import React from \"react\"\r\n\r\nconst iconTypes = new Map([\r\n    ['chronotype', 'typcn-time'],\r\n    ['cycles', 'typcn-adjust-contrast'],\r\n    ['settings', 'typcn-cog'],\r\n]);\r\n\r\nconst Icon = ({ type, className, size=24 }) => (\r\n    <span className={`typcn ${iconTypes.get(type)} ${className}`} style={{fontSize: size}}></span>\r\n)\r\n\r\nexport default Icon;","import React from \"react\";\r\nimport { useLocation, Link } from \"react-router-dom\";\r\nimport Icon from \"./Icon\";\r\n\r\nconst BottomMenu = () => {\r\n    const active = useLocation().pathname;\r\n    return (\r\n        <footer className=\"Bottom-menu\">\r\n            <Link to=\"/settings\">\r\n                <div className={`Bottom-menu-tab ${active === \"/settings\" && 'Bottom-menu-tab_active'}`}>\r\n                    <Icon type=\"settings\"/>\r\n                    <div className=\"Bottom-menu-tab__text\">Настройки</div>\r\n                </div>\r\n            </Link>\r\n\r\n            <Link to=\"/\">\r\n                <div className={`Bottom-menu-tab ${active === \"/\" && 'Bottom-menu-tab_active'}`}>\r\n                    <Icon type=\"cycles\"/>\r\n                    <div className=\"Bottom-menu-tab__text\">Циклы</div>\r\n                </div>\r\n            </Link>\r\n\r\n            <Link to=\"/definechronotype\">\r\n                <div className={`Bottom-menu-tab ${active === \"/definechronotype\" && 'Bottom-menu-tab_active'}`}>\r\n                    <Icon type=\"chronotype\"/>\r\n                    <div className=\"Bottom-menu-tab__text\">Хронотип</div>\r\n                </div>\r\n            </Link>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default BottomMenu;","import React from \"react\";\r\nimport { connect } from \"../store\";\r\nimport { setChronoCardAmount, setTimeToFallAsleep, setSingleCycleTime } from \"../store/actions/settings\";\r\n\r\nconst Settings = ({ chronoCardAmount, timeToFallAsleep, singleCycleTime, setChronoCardAmount, setTimeToFallAsleep, setSingleCycleTime, version }) => (\r\n    <React.Fragment>\r\n        <form onSubmit={e => e.preventDefault}>\r\n            <label htmlFor=\"chronoCardAmount\">Количество карт-циклов</label>\r\n            <input type=\"number\" value={chronoCardAmount} onChange={e => setChronoCardAmount(e.target.value)} id=\"chronoCardAmount\" placeholder=\"0\"/>\r\n\r\n            <label htmlFor=\"timeToFallAsleep\">Время для того, чтобы заснуть (мин)</label>\r\n            <input type=\"number\" value={timeToFallAsleep} onChange={e => setTimeToFallAsleep(e.target.value)} id=\"timeToFallAsleep\" placeholder=\"0\"/>\r\n\r\n            <label htmlFor=\"singleCycleTime\">Время 1 цикла (мин)</label>\r\n            <input type=\"number\" value={singleCycleTime} onChange={e => setSingleCycleTime(e.target.value)} id=\"singleCycleTime\" placeholder=\"0\"/>\r\n        </form>\r\n        <div>\r\n            Версия: {version[0]}.{version[1]}.{version[2]}\r\n        </div>\r\n    </React.Fragment>\r\n)\r\n\r\nconst mapStateToProps = state => ({\r\n    chronoCardAmount: state.settings.chronoCardAmount,\r\n    timeToFallAsleep: state.settings.timeToFallAsleep,\r\n    singleCycleTime: state.settings.singleCycleTime,\r\n    version: state.version\r\n})\r\n\r\nexport default connect(mapStateToProps, { setChronoCardAmount, setTimeToFallAsleep, setSingleCycleTime })(Settings);\r\n","import constants from \"../constants\";\r\nexport const setChronoCardAmount = chronoCardAmount => dispatch => dispatch({type: constants.SET_CHRONOCARDAMOUNT, payload: chronoCardAmount});\r\nexport const setTimeToFallAsleep = timeToFallAsleep => dispatch => dispatch({type: constants.SET_TIMETOFALLASLEEP, payload: timeToFallAsleep});\r\nexport const setSingleCycleTime = singleCycleTime => dispatch => dispatch({type: constants.SET_SINGLECYCLETIME, payload: singleCycleTime});","import constants from \"../constants\";\r\nexport const calculateCycles = () => dispatch => dispatch({ type: constants.CALCULATE_CYCLES, payload: null })\r\nexport const setTimeToWakeUp = time => dispatch => dispatch({ type: constants.SET_TIME_TO_GET_UP, payload: time })","import React from 'react'\r\nimport { connect } from \"../store\"\r\nimport { setTimeToWakeUp, calculateCycles } from \"../store/actions/cycles\"\r\n\r\nconst CyclesForm = ({ timeToWakeUp, setTimeToWakeUp, calculateCycles }) => (\r\n    <div className=\"card\">\r\n        <h2 className=\"cycles__title\">Время пробуждения:</h2>\r\n        <form className=\"cycles-form\">\r\n            <label>\r\n                <input type=\"text\" className=\"cycles-form__form-control\" value={timeToWakeUp.hours} onChange={e => setTimeToWakeUp({hours: e.target.value})} />\r\n                Часов\r\n            </label>\r\n            <label>\r\n                <input type=\"text\" className=\"cycles-form__form-control\" value={timeToWakeUp.minutes} onChange={e => setTimeToWakeUp({minutes: e.target.value})} />\r\n                Минут\r\n            </label>\r\n        </form>\r\n        <button onClick={calculateCycles}>Рассчитать</button>\r\n    </div>\r\n)\r\n\r\nexport default connect(state => ({ timeToWakeUp: state.cycles.timeToWakeUp }), { setTimeToWakeUp, calculateCycles })(CyclesForm);","import constants from \"../constants\";\r\nexport const alertMessage = (text, timeout=1000) => dispatch => {\r\n    setTimeout(dispatch, timeout, { type: constants.HIDE_MESSAGE });\r\n    dispatch({ type: constants.ALERT_MESSAGE, payload: text});\r\n}","import React from \"react\";\r\n\r\n\r\nconst CycleCard = ({ count, cycle, onClickHandler}) => (\r\n    <div className=\"card card_animated\" onClick={onClickHandler}>\r\n        <span className=\"card__subtitle\">Количество циклов: {count}</span>\r\n        <h3 className=\"card__time\">{cycle.preparedTime}</h3>\r\n    </div>\r\n);\r\n\r\nexport default CycleCard;","import React from \"react\";\r\nimport { connect } from \"../store\";\r\nimport { alertMessage } from \"../store/actions/message\";\r\nimport { planNotification } from \"../store/actions/notification\";\r\nimport CycleCard from \"./CycleCard\";\r\n\r\nconst Cycles = ({ advices, alertMessage, planNotification }) => {\r\n    return (\r\n        <>\r\n            {advices.map((cycle, index) => (\r\n                <CycleCard count={index + 1} cycle={cycle} key={index} onClickHandler={() => {\r\n                    planNotification(cycle.timeout)\r\n                    alertMessage(\"Уведомление уствновлено\");\r\n                    console.log(cycle.timeout / 1000);\r\n                }} />\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default connect(state => ({ advices: state.cycles.advices }), { alertMessage, planNotification })(Cycles);","import constants from \"../constants\"\r\nimport Push from \"push.js\"\r\n\r\nexport const planNotification = (time) => (dispatch, state) => {\r\n    clearTimeout(state.notification.timeoutKey);\r\n    const timeoutKey = setTimeout(() => Push.create(\"Время готовиться ко сну!\", {\r\n        body: \"Bio control app\",\r\n        vibrate: true,\r\n        requireInteraction: true\r\n    }), time)\r\n\r\n    dispatch({ type: constants.SET_NOTIFICATION_KEY, payload: timeoutKey });\r\n}","import React from 'react'\r\nimport CyclesForm from \"./CyclesForm\"\r\nimport Cycles from \"./Cycles\"\r\n\r\nconst CyclesPage = () => (\r\n    <>\r\n        <CyclesForm />\r\n        <Cycles />\r\n    </>\r\n)\r\n\r\nexport default CyclesPage","import { Component } from \"react\";\r\nimport { connect } from \"../store\";\r\nimport { calculateCycles } from \"../store/actions/cycles\";\r\nimport { alertMessage } from \"../store/actions/message\";\r\nimport Push from \"push.js\";\r\n\r\nclass StateController extends Component {\r\n    componentDidMount() {\r\n        this.props.calculateCycles();\r\n        this.initNotifications();\r\n        window.addEventListener('unload', () =>\r\n            window.localStorage.setItem(\"app-state\", JSON.stringify(this.props.state))\r\n        );\r\n    }\r\n\r\n    initNotifications() {\r\n        const { alertMessage } = this.props;\r\n        if (!Push.Permission.has()) {\r\n            Push.Permission.request(\r\n                () => alertMessage('Уведомления активны', 3000),\r\n                () => alertMessage('Уведомления отключены', 3000)\r\n            );\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport default connect(state => ({state}), { calculateCycles, alertMessage })(StateController);","import React from \"react\";\r\n\r\nconst data = {\r\n    name: {\r\n        lark: \"Жаворонок\",\r\n        pigeon: \"Голубь\",\r\n        owl: \"Сова\" \r\n    },\r\n    timeToGetUp: {\r\n        lark: \"4-6ч\",\r\n        pigeon: \"6-8ч\",\r\n        owl: \"8-10 и позднее\" \r\n    },\r\n    timeToFallAsleep: {\r\n        lark: \"20-22ч\",\r\n        pigeon: \"22-24ч\",\r\n        owl: \"24ч и позже\" \r\n    },\r\n    highActivity: {\r\n        lark: \"6-12ч  и с 19ч\",\r\n        pigeon: \"10-12ч и 16-18ч\",\r\n        owl: \"после 16\" \r\n    },\r\n    meals: {\r\n        lark: [\r\n            \"4-8ч\"\r\n        ],\r\n        pigeon: [\r\n            \"6-10ч\"\r\n        ],\r\n        owl: [\r\n            \"8-12ч\"\r\n        ] \r\n    }\r\n}\r\n\r\nexport default ({ type }) => (\r\n    <div className=\"block\">\r\n        <div className=\"block__title\">\r\n            Хронотип: {data.name[type]}\r\n        </div>\r\n        <div className=\"block__text\">\r\n            Подходящее время для пробуждения: <span className=\"block__value\">{data.timeToGetUp[type]}</span>\r\n        </div>\r\n        <div className=\"block__text\">\r\n            Подходящее время для засыпания: <span className=\"block__value\">{data.timeToFallAsleep[type]}</span>\r\n        </div>\r\n        <div className=\"block__text\">\r\n            Время наибольшей активности: <span className=\"block__value\">{data.highActivity[type]}</span>\r\n        </div>\r\n        <div className=\"block__text\">\r\n            Подходящее время для завтрака: <span className=\"block__value\">{data.meals[type][0]}</span>\r\n        </div>\r\n    </div>\r\n);","import React from \"react\";\r\nimport { connect } from \"../store\";\r\nimport { alertMessage } from \"../store/actions/message\";\r\nimport { defineChronotype, clearChronotype } from \"../store/actions/definechronotype\";\r\nimport ChronotypeInfo from \"./ChronotypeInfo\";\r\n\r\nclass DefineChronotype extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            q0: 0,\r\n            q1: 0,\r\n            q2: 0,\r\n            q3: 0,\r\n            q4: 0,\r\n        }\r\n        this.onInputChange = this.onInputChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onInputChange({ target }) {\r\n        this.setState({[target.name]: parseInt(target.value)});\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        let validated = true;\r\n        for(let key in this.state) {\r\n            this.state[key] === 0 && (validated = false);\r\n        }\r\n        if(validated) {\r\n            this.props.defineChronotype(this.state);\r\n        } else {\r\n            this.props.alertMessage('Не все поля заполнены!')\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { state, onInputChange, onSubmit } = this;\r\n        const { clearChronotype, type } = this.props; \r\n        return (this.props.showTest ? (\r\n            <form>\r\n                <p>Трудно ли вам вставать рано утром?</p>\r\n                <div className=\"form-group\">\r\n                    <p className=\"label\"><input type=\"radio\" name=\"q0\" value=\"4\" checked= {state.q0 === 4 } onChange={onInputChange}/> Да, почти всегда </p>\r\n                    <p className=\"label\"><input type=\"radio\" name=\"q0\" value=\"3\" checked= {state.q0 === 3 } onChange={onInputChange}/> Иногда </p>\r\n                    <p className=\"label\"><input type=\"radio\" name=\"q0\" value=\"2\" checked= {state.q0 === 2 } onChange={onInputChange}/> Редко </p>\r\n                    <p className=\"label\"><input type=\"radio\" name=\"q0\" value=\"1\" checked= {state.q0 === 1 } onChange={onInputChange}/> Крайне редко </p>\r\n                </div>\r\n                <p>Если бы у вас была возможность выбора, в какое время вы ложились бы спать?</p>\r\n                <div className=\"form-group\">\r\n                    <p className=\"label\"><input type=\"radio\" name=\"q1\" value=\"4\" checked= {state.q1 === 4 } onChange={onInputChange}/> Позже 1 часа ночи </p>\r\n                    <p className=\"label\"><input type=\"radio\" name=\"q1\" value=\"3\" checked= {state.q1 === 3 } onChange={onInputChange}/> Около 23 часов </p>\r\n                    <p className=\"label\"><input type=\"radio\" name=\"q1\" value=\"2\" checked= {state.q1 === 2 } onChange={onInputChange}/> Около 22 часов </p>\r\n                    <p className=\"label\"><input type=\"radio\" name=\"q1\" value=\"1\" checked= {state.q1 === 1 } onChange={onInputChange}/> До 22 часов </p>\r\n                </div>\r\n                <p>Насколько вы голодны после пробуждения? </p>\r\n                <div className=\"form-group\">\r\n                    <p className=\"label\"><input type=\"radio\" name=\"q2\" value=\"4\" checked= {state.q2 === 4 } onChange={onInputChange}/> Предпочитаю плотный завтрак </p>\r\n                    <p className=\"label\"><input type=\"radio\" name=\"q2\" value=\"3\" checked= {state.q2 === 3 } onChange={onInputChange}/> Обычный завтрак </p>\r\n                    <p className=\"label\"><input type=\"radio\" name=\"q2\" value=\"2\" checked= {state.q2 === 2 } onChange={onInputChange}/> Легкий завтрак </p>\r\n                    <p className=\"label\"><input type=\"radio\" name=\"q2\" value=\"1\" checked= {state.q2 === 1 } onChange={onInputChange}/> Не голоден </p>\r\n                </div>\r\n                <p>От чего вам легче отказаться? </p>\r\n                <div className=\"form-group\">\r\n                    <p className=\"label\"><input type=\"radio\" name=\"q3\" value=\"3\" checked= {state.q3 === 3 } onChange={onInputChange}/> От чая вечером </p>\r\n                    <p className=\"label\"><input type=\"radio\" name=\"q3\" value=\"2\" checked= {state.q3 === 2 } onChange={onInputChange}/> От кофе/чая утром </p>\r\n                </div>\r\n                <p className=\"text-size-bug-fix\">Насколько легко вы изменяете своим привычкам относительно принятия пищи во время отпуска? </p>\r\n                <div className=\"form-group\">\r\n                    <p className=\"label\"><input type=\"radio\" name=\"q4\" value=\"4\" checked= {state.q4 === 4 } onChange={onInputChange}/> Очень легко </p>\r\n                    <p className=\"label\"><input type=\"radio\" name=\"q4\" value=\"3\" checked= {state.q4 === 3 } onChange={onInputChange}/> Легко </p>\r\n                    <p className=\"label\"><input type=\"radio\" name=\"q4\" value=\"2\" checked= {state.q4 === 2 } onChange={onInputChange}/> Трудно </p>\r\n                    <p className=\"label\"><input type=\"radio\" name=\"q4\" value=\"1\" checked= {state.q4 === 1 } onChange={onInputChange}/> Не изменяются </p>\r\n                </div>\r\n                <button onClick={onSubmit}>Завершить</button>\r\n            </form>\r\n        ) : (\r\n        <React.Fragment>\r\n            <ChronotypeInfo type={type}/>\r\n            <button onClick={clearChronotype} className=\"button_secondary\">\r\n                Пройти тест заново\r\n            </button>\r\n        </React.Fragment>))\r\n    }\r\n}\r\n\r\nexport default connect(state => state.chronotype, { alertMessage, defineChronotype, clearChronotype })(DefineChronotype);","import constants from \"../constants\";\r\nexport const defineChronotype = payload => dispatch => dispatch({type: constants.DEFINE_CHRONOTYPE, payload});\r\nexport const clearChronotype = () => dispatch => dispatch({ type: constants.CLEAR_CHRONOTYPE });","import React from \"react\";\r\nimport { connect } from \"../store\";\r\n\r\nconst Message = ({text, show}) => (\r\n    <div className={`message ${show ? 'message_shown' : 'message_hidden'}`}>{ text }</div>\r\n)\r\n\r\nexport default connect(state => state.message)(Message);\r\n\r\n","import React from 'react';\nimport { Provider } from \"./store\";\nimport reducers from \"./store/reducers\"\nimport initialState from \"./store/initialState\";\n\nimport Nav from \"./components/Nav\";\nimport BottomMenu from \"./components/BottomMenu\";\nimport Settings from \"./components/Settings\";\nimport CyclesPage from \"./components/CyclesPage\";\nimport StateController from \"./components/StateController\";\nimport DefineChronotype from \"./components/DefineChronotype\";\nimport Message from \"./components/Message\";\n\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nconst App = () => (\n  <Router>\n    <Provider initialState={initialState} reducer={reducers}>\n      <Nav/>\n      <main>\n        <Route path=\"/\" component={CyclesPage} exact/>\n        <Route path=\"/settings\" component={Settings} exact/>\n        <Route path=\"/definechronotype\" component={DefineChronotype} exact/>\n        <Message/>\n      </main>\n      <BottomMenu/>\n      <StateController/>\n    </Provider>\n  </Router>\n)\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"typicons.font\";\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.register();\n"],"sourceRoot":""}